using NUnit.Framework;
using System;
using Testris.Specs;
using Tetris;

namespace Field_Move_specs
{
    public class Throws_When
    {
        [Test]
        public void Block_hangs_above()
        {
            Block block = Data.Block(
                Shape.L,
                Rotation.None,
                0,
                3,
                0b_00100_00000,
                0b_11100_00000);


            var field = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00110_00000,
                0b_11101_00000);

            Assert.Catch<ArgumentException>(() => field.Move(block));
        }
    }

    public class Applies
    {
        [Test]
        public void Lines_below_block_are_copied()
        {
            Block block = Data.Block(
                Shape.L,
                Rotation.None,
                0,
                2,
                0b_00100_00000,
                0b_11100_00000);


            var field = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00110_00000,
                0b_11101_00000);

            var move = field.Move(block);

            var moved = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00100_00000,
                0b_11100_00000,
                0b_00110_00000,
                0b_11101_00000);

            Assert.AreEqual(moved, move.Field);
            Assert.AreEqual(Clearing.None, move.Clearing);
        }

        [Test]
        public void Lines_above_block_are_kept()
        {
            Block block = Data.Block(
                Shape.L,
                Rotation.None,
                0,
                2,
                0b_00100_00000,
                0b_11100_00000);


            var field = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00010,
                0b_00000_00010,
                0b_00000_00010,
                0b_00110_00011,
                0b_11101_00011);

            var move = field.Move(block);

            var moved = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00010,
                0b_00100_00010,
                0b_11100_00010,
                0b_00110_00011,
                0b_11101_00011);

            Assert.AreEqual(moved, move.Field);
            Assert.AreEqual(Clearing.None, move.Clearing);
        }
    }
    public class Clearing_Of
    {
        [Test]
        public void Block_hangs_above()
        {
            Block block = Data.Block(
                Shape.L,
                Rotation.None,
                0,
                2,
                0b_00100_00000,
                0b_11100_00000);


            var field = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00110_00000,
                0b_11101_00000);

            var move = field.Move(block);

            var moved = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00100_00000,
                0b_11100_00000,
                0b_00110_00000,
                0b_11101_00000);

            Assert.AreEqual(moved, move.Field);
            Assert.AreEqual(Clearing.None, move.Clearing);
        }

        [Test]
        public void Four_rows_is_tetris()
        {
            Block block = Data.Block(
                Shape.I,
                Rotation.Left,
                2,
                1,
                0b_00100_00000,
                0b_00100_00000,
                0b_00100_00000,
                0b_00100_00000);


            var field = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_11011_11111,
                0b_11011_11111,
                0b_11011_11111,
                0b_11011_11111,
                0b_11101_01111);

            var move = field.Move(block);

            var moved = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_11101_01111);

            Assert.AreEqual(moved, move.Field);
            Assert.AreEqual(Clearing.Tetris, move.Clearing);
        }

        [Test]
        public void Not_connected_rows_is_detected()
        {
            Block block = Data.Block(
                Shape.L,
                Rotation.Left,
                2,
                1,
                0b_00110_00000,
                0b_00100_00000,
                0b_00100_00000);


            var field = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_11001_11111,
                0b_11001_11111,
                0b_11011_10011,
                0b_11011_11111,
                0b_11101_01111);

            var move = field.Move(block);

            var moved = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_11001_11111,
                0b_11111_10011,
                0b_11101_01111);

            Assert.AreEqual(moved, move.Field);
            Assert.AreEqual(new Clearing(2, false, false), move.Clearing);
        }

        [Test]
        public void All_rows_is_perfect_clear()
        {
            Block block = Data.Block(
                Shape.I,
                Rotation.None,
                2,
                0,
                0b_00110_00000,
                0b_00110_00000);


            var field = Field.New(
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,

                0b_00000_00000,
                0b_00000_00000,
                0b_00000_00000,
                0b_11001_11111,
                0b_11001_11111);

            var move = field.Move(block);

            Assert.AreEqual(Field.Start, move.Field);
            Assert.AreEqual(new Clearing(2, true, false), move.Clearing);
        }
    }
}
